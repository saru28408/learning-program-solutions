

import java.util.*;
interface Stock {
    void registerObserver(Observer o);
    void removeObserver(Observer o);
    void notifyObservers();
}
interface Observer {
    void update(String stockName, double price);
}
class StockMarket implements Stock {
    private List<Observer> observers = new ArrayList<>();
    private String stockName;
    private double stockPrice;

    @Override
    public void registerObserver(Observer o) {
        observers.add(o);
    }

    @Override
    public void removeObserver(Observer o) {
        observers.remove(o);
    }

    @Override
    public void notifyObservers() {
        for (Observer o : observers) {
            o.update(stockName, stockPrice);
        }
    }
    public void setStockPrice(String name, double price) {
        this.stockName = name;
        this.stockPrice = price;
        System.out.println("\nStock Updated: " + name + " -> $" + price);
        notifyObservers();
    }
}
class MobileApp implements Observer {
    private String name;

    public MobileApp(String name) {
        this.name = name;
    }

    @Override
    public void update(String stockName, double price) {
        System.out.println("[" + name + " - Mobile] Received update: " + stockName + " = $" + price);
    }
}

class WebApp implements Observer {
    private String name;

    public WebApp(String name) {
        this.name = name;
    }

    @Override
    public void update(String stockName, double price) {
        System.out.println("[" + name + " - Web] Received update: " + stockName + " = $" + price);
    }
}
public class ObserverPatternExample{
    public static void main(String[] args) {
        StockMarket stockMarket = new StockMarket();

        Observer mobileUser = new MobileApp("Alice");
        Observer webUser = new WebApp("Bob");

        stockMarket.registerObserver(mobileUser);
        stockMarket.registerObserver(webUser);

        stockMarket.setStockPrice("AAPL", 189.30);
        stockMarket.setStockPrice("GOOGL", 2775.50);

        stockMarket.removeObserver(webUser);

        stockMarket.setStockPrice("TSLA", 720.10);
    }
}
