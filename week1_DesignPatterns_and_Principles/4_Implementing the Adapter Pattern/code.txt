

public class AdapterPatternExample {

    
    interface PaymentProcessor {
        void processPayment(double amount);
    }

   
    static class PayPalGateway {
        public void sendPayment(double amountInUSD) {
            System.out.println("Processing PayPal payment of $" + amountInUSD);
        }
    }

    
    static class StripeGateway {
        public void makePayment(double amountInDollars) {
            System.out.println("Processing Stripe payment of $" + amountInDollars);
        }
    }

    
    static class RazorpayGateway {
        public void pay(double rupeeAmount) {
            System.out.println("Processing Razorpay payment of ₹" + rupeeAmount);
        }
    }

    

    static class PayPalAdapter implements PaymentProcessor {
        private PayPalGateway paypal = new PayPalGateway();

        @Override
        public void processPayment(double amount) {
            paypal.sendPayment(amount);
        }
    }

    static class StripeAdapter implements PaymentProcessor {
        private StripeGateway stripe = new StripeGateway();

        @Override
        public void processPayment(double amount) {
            stripe.makePayment(amount);
        }
    }

    static class RazorpayAdapter implements PaymentProcessor {
        private RazorpayGateway razorpay = new RazorpayGateway();

        @Override
        public void processPayment(double amount) {
            razorpay.pay(amount);
        }
    }

    
    public static void main(String[] args) {
        
        PaymentProcessor paypalProcessor = new PayPalAdapter();
        paypalProcessor.processPayment(100.0);

       
        PaymentProcessor stripeProcessor = new StripeAdapter();
        stripeProcessor.processPayment(200.0);

        
        PaymentProcessor razorpayProcessor = new RazorpayAdapter();
        razorpayProcessor.processPayment(1500.0); // Assuming ₹
    }
}
