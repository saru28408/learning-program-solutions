import java.util.HashMap;

	         class Product {
	    private String productId;
	    private String productName;
	    private int quantity;
	    private double price;

	    public Product(String productId, String productName, int quantity, double price) {
	        this.productId = productId;
	        this.productName = productName;
	        this.quantity = quantity;
	        this.price = price;
	    }


	    public String getProductId() {
	        return productId;
	    }

	    public String getProductName() {
	        return productName;
	    }

	    public void setProductName(String name) {
	        this.productName = name;
	    }

	    public int getQuantity() {
	        return quantity;
	    }

	    public void setQuantity(int qty) {
	        this.quantity = qty;
	    }

	    public double getPrice() {
	        return price;
	    }

	    public void setPrice(double pr) {
	        this.price = pr;
	    }

	    @Override
	    public String toString() {
	        return "ID: " + productId + ", Name: " + productName +
	               ", Quantity: " + quantity + ", Price: â‚¹" + price;
	    }
	}
class Inventory {
	    private HashMap<String, Product> products;

	    public Inventory() {
	        products = new HashMap<>();
	    }

	    public void addProduct(Product product) {
	        if (products.containsKey(product.getProductId())) {
	            System.out.println("Product already exists.");
	        } else {
	            products.put(product.getProductId(), product);
	            System.out.println("Product added successfully.");
	        }
	    }

	    public void updateProduct(String productId, String name, Integer quantity, Double price) {
	        if (products.containsKey(productId)) {
	            Product product = products.get(productId);
	            if (name != null) product.setProductName(name);
	            if (quantity != null) product.setQuantity(quantity);
	            if (price != null) product.setPrice(price);
	            System.out.println("Product updated.");
	        } else {
	            System.out.println("Product not found.");
	        }
	    }

	    public void deleteProduct(String productId) {
	        if (products.containsKey(productId)) {
	            products.remove(productId);
	            System.out.println("Product deleted.");
	        } else {
	            System.out.println("Product not found.");
	        }
	    }

	    public void viewInventory() {
	        if (products.isEmpty()) {
	            System.out.println("Inventory is empty.");
	        } else {
	            for (Product p : products.values()) {
	                System.out.println(p);
	            }
	        }
	    }
	}

	
public class InventoryManagementSystem{
    public static void main(String[] args) {
        Inventory inv = new Inventory();

        Product p1 = new Product("P001", "Keyboard", 50, 1299.50);
        Product p2 = new Product("P002", "Mouse", 100, 499.00);

        inv.addProduct(p1);
        inv.addProduct(p2);

        inv.viewInventory();

        inv.updateProduct("P001", null, 60, 1199.99); 
        inv.viewInventory();

        inv.deleteProduct("P002");
        inv.viewInventory();
    }
}





